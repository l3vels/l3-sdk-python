# coding: utf-8

"""
    L3vels Api

    L3vels API for Game developers  # noqa: E501

    The version of the OpenAPI document: 0.3
    Contact: support@l3vels.xyz
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from l3vels import schemas  # noqa: F401


class Player(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "modified_on",
            "unique_id",
            "last_seen",
            "avatar",
            "is_create_wallet",
            "created_by",
            "account_id",
            "created_on",
            "modified_by",
            "name",
            "id",
            "custom_props",
            "email",
            "game_id",
            "username",
        }
        
        class properties:
            id = schemas.StrSchema
            unique_id = schemas.StrSchema
            name = schemas.StrSchema
            username = schemas.StrSchema
            email = schemas.StrSchema
            avatar = schemas.StrSchema
            custom_props = schemas.DictSchema
            last_seen = schemas.DateTimeSchema
            account_id = schemas.StrSchema
            game_id = schemas.StrSchema
            created_on = schemas.DateTimeSchema
            modified_on = schemas.DateTimeSchema
            created_by = schemas.StrSchema
            modified_by = schemas.StrSchema
            is_create_wallet = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "unique_id": unique_id,
                "name": name,
                "username": username,
                "email": email,
                "avatar": avatar,
                "custom_props": custom_props,
                "last_seen": last_seen,
                "account_id": account_id,
                "game_id": game_id,
                "created_on": created_on,
                "modified_on": modified_on,
                "created_by": created_by,
                "modified_by": modified_by,
                "is_create_wallet": is_create_wallet,
            }
    
    modified_on: MetaOapg.properties.modified_on
    unique_id: MetaOapg.properties.unique_id
    last_seen: MetaOapg.properties.last_seen
    avatar: MetaOapg.properties.avatar
    is_create_wallet: MetaOapg.properties.is_create_wallet
    created_by: MetaOapg.properties.created_by
    account_id: MetaOapg.properties.account_id
    created_on: MetaOapg.properties.created_on
    modified_by: MetaOapg.properties.modified_by
    name: MetaOapg.properties.name
    id: MetaOapg.properties.id
    custom_props: MetaOapg.properties.custom_props
    email: MetaOapg.properties.email
    game_id: MetaOapg.properties.game_id
    username: MetaOapg.properties.username
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unique_id"]) -> MetaOapg.properties.unique_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avatar"]) -> MetaOapg.properties.avatar: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_props"]) -> MetaOapg.properties.custom_props: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_seen"]) -> MetaOapg.properties.last_seen: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["game_id"]) -> MetaOapg.properties.game_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_create_wallet"]) -> MetaOapg.properties.is_create_wallet: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "unique_id", "name", "username", "email", "avatar", "custom_props", "last_seen", "account_id", "game_id", "created_on", "modified_on", "created_by", "modified_by", "is_create_wallet", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unique_id"]) -> MetaOapg.properties.unique_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avatar"]) -> MetaOapg.properties.avatar: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_props"]) -> MetaOapg.properties.custom_props: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_seen"]) -> MetaOapg.properties.last_seen: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["game_id"]) -> MetaOapg.properties.game_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_create_wallet"]) -> MetaOapg.properties.is_create_wallet: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "unique_id", "name", "username", "email", "avatar", "custom_props", "last_seen", "account_id", "game_id", "created_on", "modified_on", "created_by", "modified_by", "is_create_wallet", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        modified_on: typing.Union[MetaOapg.properties.modified_on, str, datetime, ],
        unique_id: typing.Union[MetaOapg.properties.unique_id, str, ],
        last_seen: typing.Union[MetaOapg.properties.last_seen, str, datetime, ],
        avatar: typing.Union[MetaOapg.properties.avatar, str, ],
        is_create_wallet: typing.Union[MetaOapg.properties.is_create_wallet, bool, ],
        created_by: typing.Union[MetaOapg.properties.created_by, str, ],
        account_id: typing.Union[MetaOapg.properties.account_id, str, ],
        created_on: typing.Union[MetaOapg.properties.created_on, str, datetime, ],
        modified_by: typing.Union[MetaOapg.properties.modified_by, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        custom_props: typing.Union[MetaOapg.properties.custom_props, dict, frozendict.frozendict, ],
        email: typing.Union[MetaOapg.properties.email, str, ],
        game_id: typing.Union[MetaOapg.properties.game_id, str, ],
        username: typing.Union[MetaOapg.properties.username, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Player':
        return super().__new__(
            cls,
            *_args,
            modified_on=modified_on,
            unique_id=unique_id,
            last_seen=last_seen,
            avatar=avatar,
            is_create_wallet=is_create_wallet,
            created_by=created_by,
            account_id=account_id,
            created_on=created_on,
            modified_by=modified_by,
            name=name,
            id=id,
            custom_props=custom_props,
            email=email,
            game_id=game_id,
            username=username,
            _configuration=_configuration,
            **kwargs,
        )
