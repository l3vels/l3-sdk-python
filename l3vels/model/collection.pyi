# coding: utf-8

"""
    L3vels Api

    L3vels API for Game developers  # noqa: E501

    The version of the OpenAPI document: 0.3
    Contact: support@l3vels.xyz
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from l3vels import schemas  # noqa: F401


class Collection(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "modified_on",
            "unique_id",
            "custom_property_props",
            "social_links",
            "description",
            "logo_image",
            "web_link",
            "created_by",
            "supply",
            "url",
            "medias",
            "account_id",
            "created_on",
            "project_id",
            "modified_by",
            "name",
            "main_media",
            "custom_asset_props",
            "categories",
            "id",
            "status",
        }
        
        class properties:
            id = schemas.StrSchema
            unique_id = schemas.StrSchema
            name = schemas.StrSchema
            description = schemas.StrSchema
            logo_image = schemas.StrSchema
            
            
            class medias(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'medias':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            main_media = schemas.StrSchema
            url = schemas.StrSchema
            web_link = schemas.StrSchema
            supply = schemas.NumberSchema
            custom_property_props = schemas.DictSchema
            
            
            class social_links(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'social_links':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            custom_asset_props = schemas.DictSchema
            categories = schemas.DictSchema
            status = schemas.StrSchema
            account_id = schemas.NumberSchema
            project_id = schemas.StrSchema
            created_on = schemas.DateTimeSchema
            modified_on = schemas.DateTimeSchema
            created_by = schemas.NumberSchema
            modified_by = schemas.NumberSchema
            __annotations__ = {
                "id": id,
                "unique_id": unique_id,
                "name": name,
                "description": description,
                "logo_image": logo_image,
                "medias": medias,
                "main_media": main_media,
                "url": url,
                "web_link": web_link,
                "supply": supply,
                "custom_property_props": custom_property_props,
                "social_links": social_links,
                "custom_asset_props": custom_asset_props,
                "categories": categories,
                "status": status,
                "account_id": account_id,
                "project_id": project_id,
                "created_on": created_on,
                "modified_on": modified_on,
                "created_by": created_by,
                "modified_by": modified_by,
            }
    
    modified_on: MetaOapg.properties.modified_on
    unique_id: MetaOapg.properties.unique_id
    custom_property_props: MetaOapg.properties.custom_property_props
    social_links: MetaOapg.properties.social_links
    description: MetaOapg.properties.description
    logo_image: MetaOapg.properties.logo_image
    web_link: MetaOapg.properties.web_link
    created_by: MetaOapg.properties.created_by
    supply: MetaOapg.properties.supply
    url: MetaOapg.properties.url
    medias: MetaOapg.properties.medias
    account_id: MetaOapg.properties.account_id
    created_on: MetaOapg.properties.created_on
    project_id: MetaOapg.properties.project_id
    modified_by: MetaOapg.properties.modified_by
    name: MetaOapg.properties.name
    main_media: MetaOapg.properties.main_media
    custom_asset_props: MetaOapg.properties.custom_asset_props
    categories: MetaOapg.properties.categories
    id: MetaOapg.properties.id
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unique_id"]) -> MetaOapg.properties.unique_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["logo_image"]) -> MetaOapg.properties.logo_image: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["medias"]) -> MetaOapg.properties.medias: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["main_media"]) -> MetaOapg.properties.main_media: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["web_link"]) -> MetaOapg.properties.web_link: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supply"]) -> MetaOapg.properties.supply: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_property_props"]) -> MetaOapg.properties.custom_property_props: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["social_links"]) -> MetaOapg.properties.social_links: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_asset_props"]) -> MetaOapg.properties.custom_asset_props: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["categories"]) -> MetaOapg.properties.categories: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "unique_id", "name", "description", "logo_image", "medias", "main_media", "url", "web_link", "supply", "custom_property_props", "social_links", "custom_asset_props", "categories", "status", "account_id", "project_id", "created_on", "modified_on", "created_by", "modified_by", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unique_id"]) -> MetaOapg.properties.unique_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["logo_image"]) -> MetaOapg.properties.logo_image: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["medias"]) -> MetaOapg.properties.medias: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["main_media"]) -> MetaOapg.properties.main_media: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["web_link"]) -> MetaOapg.properties.web_link: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supply"]) -> MetaOapg.properties.supply: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_property_props"]) -> MetaOapg.properties.custom_property_props: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["social_links"]) -> MetaOapg.properties.social_links: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_asset_props"]) -> MetaOapg.properties.custom_asset_props: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["categories"]) -> MetaOapg.properties.categories: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "unique_id", "name", "description", "logo_image", "medias", "main_media", "url", "web_link", "supply", "custom_property_props", "social_links", "custom_asset_props", "categories", "status", "account_id", "project_id", "created_on", "modified_on", "created_by", "modified_by", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        modified_on: typing.Union[MetaOapg.properties.modified_on, str, datetime, ],
        unique_id: typing.Union[MetaOapg.properties.unique_id, str, ],
        custom_property_props: typing.Union[MetaOapg.properties.custom_property_props, dict, frozendict.frozendict, ],
        social_links: typing.Union[MetaOapg.properties.social_links, list, tuple, ],
        description: typing.Union[MetaOapg.properties.description, str, ],
        logo_image: typing.Union[MetaOapg.properties.logo_image, str, ],
        web_link: typing.Union[MetaOapg.properties.web_link, str, ],
        created_by: typing.Union[MetaOapg.properties.created_by, decimal.Decimal, int, float, ],
        supply: typing.Union[MetaOapg.properties.supply, decimal.Decimal, int, float, ],
        url: typing.Union[MetaOapg.properties.url, str, ],
        medias: typing.Union[MetaOapg.properties.medias, list, tuple, ],
        account_id: typing.Union[MetaOapg.properties.account_id, decimal.Decimal, int, float, ],
        created_on: typing.Union[MetaOapg.properties.created_on, str, datetime, ],
        project_id: typing.Union[MetaOapg.properties.project_id, str, ],
        modified_by: typing.Union[MetaOapg.properties.modified_by, decimal.Decimal, int, float, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        main_media: typing.Union[MetaOapg.properties.main_media, str, ],
        custom_asset_props: typing.Union[MetaOapg.properties.custom_asset_props, dict, frozendict.frozendict, ],
        categories: typing.Union[MetaOapg.properties.categories, dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Collection':
        return super().__new__(
            cls,
            *_args,
            modified_on=modified_on,
            unique_id=unique_id,
            custom_property_props=custom_property_props,
            social_links=social_links,
            description=description,
            logo_image=logo_image,
            web_link=web_link,
            created_by=created_by,
            supply=supply,
            url=url,
            medias=medias,
            account_id=account_id,
            created_on=created_on,
            project_id=project_id,
            modified_by=modified_by,
            name=name,
            main_media=main_media,
            custom_asset_props=custom_asset_props,
            categories=categories,
            id=id,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )
