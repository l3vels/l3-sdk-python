# coding: utf-8

"""
    L3vels Api

    L3vels API for Game developers  # noqa: E501

    The version of the OpenAPI document: 0.3
    Contact: support@l3vels.xyz
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from l3vels import schemas  # noqa: F401


class Asset(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "modified_on",
            "minted_amount",
            "description",
            "asset_url",
            "created_by",
            "supply",
            "collection_id",
            "medias",
            "account_id",
            "token_id",
            "created_on",
            "project_id",
            "parent_id",
            "price",
            "asset_type",
            "modified_by",
            "name",
            "main_media",
            "attributes",
            "id",
            "properties",
            "status",
        }
        
        class properties:
            id = schemas.StrSchema
            token_id = schemas.NumberSchema
            name = schemas.StrSchema
            parent_id = schemas.StrSchema
            properties = schemas.DictSchema
            attributes = schemas.DictSchema
            description = schemas.StrSchema
            status = schemas.StrSchema
            price = schemas.NumberSchema
            supply = schemas.NumberSchema
            minted_amount = schemas.NumberSchema
            asset_type = schemas.StrSchema
            asset_url = schemas.StrSchema
            
            
            class medias(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'medias':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            main_media = schemas.StrSchema
            account_id = schemas.NumberSchema
            project_id = schemas.StrSchema
            collection_id = schemas.StrSchema
            created_on = schemas.DateTimeSchema
            modified_on = schemas.DateTimeSchema
            created_by = schemas.NumberSchema
            modified_by = schemas.NumberSchema
            __annotations__ = {
                "id": id,
                "token_id": token_id,
                "name": name,
                "parent_id": parent_id,
                "properties": properties,
                "attributes": attributes,
                "description": description,
                "status": status,
                "price": price,
                "supply": supply,
                "minted_amount": minted_amount,
                "asset_type": asset_type,
                "asset_url": asset_url,
                "medias": medias,
                "main_media": main_media,
                "account_id": account_id,
                "project_id": project_id,
                "collection_id": collection_id,
                "created_on": created_on,
                "modified_on": modified_on,
                "created_by": created_by,
                "modified_by": modified_by,
            }
    
    modified_on: MetaOapg.properties.modified_on
    minted_amount: MetaOapg.properties.minted_amount
    description: MetaOapg.properties.description
    asset_url: MetaOapg.properties.asset_url
    created_by: MetaOapg.properties.created_by
    supply: MetaOapg.properties.supply
    collection_id: MetaOapg.properties.collection_id
    medias: MetaOapg.properties.medias
    account_id: MetaOapg.properties.account_id
    token_id: MetaOapg.properties.token_id
    created_on: MetaOapg.properties.created_on
    project_id: MetaOapg.properties.project_id
    parent_id: MetaOapg.properties.parent_id
    price: MetaOapg.properties.price
    asset_type: MetaOapg.properties.asset_type
    modified_by: MetaOapg.properties.modified_by
    name: MetaOapg.properties.name
    main_media: MetaOapg.properties.main_media
    attributes: MetaOapg.properties.attributes
    id: MetaOapg.properties.id
    properties: MetaOapg.properties.properties
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["token_id"]) -> MetaOapg.properties.token_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parent_id"]) -> MetaOapg.properties.parent_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["properties"]) -> MetaOapg.properties.properties: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attributes"]) -> MetaOapg.properties.attributes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["price"]) -> MetaOapg.properties.price: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supply"]) -> MetaOapg.properties.supply: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minted_amount"]) -> MetaOapg.properties.minted_amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["asset_type"]) -> MetaOapg.properties.asset_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["asset_url"]) -> MetaOapg.properties.asset_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["medias"]) -> MetaOapg.properties.medias: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["main_media"]) -> MetaOapg.properties.main_media: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["collection_id"]) -> MetaOapg.properties.collection_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "token_id", "name", "parent_id", "properties", "attributes", "description", "status", "price", "supply", "minted_amount", "asset_type", "asset_url", "medias", "main_media", "account_id", "project_id", "collection_id", "created_on", "modified_on", "created_by", "modified_by", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["token_id"]) -> MetaOapg.properties.token_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parent_id"]) -> MetaOapg.properties.parent_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["properties"]) -> MetaOapg.properties.properties: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attributes"]) -> MetaOapg.properties.attributes: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["price"]) -> MetaOapg.properties.price: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supply"]) -> MetaOapg.properties.supply: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minted_amount"]) -> MetaOapg.properties.minted_amount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["asset_type"]) -> MetaOapg.properties.asset_type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["asset_url"]) -> MetaOapg.properties.asset_url: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["medias"]) -> MetaOapg.properties.medias: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["main_media"]) -> MetaOapg.properties.main_media: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account_id"]) -> MetaOapg.properties.account_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["project_id"]) -> MetaOapg.properties.project_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["collection_id"]) -> MetaOapg.properties.collection_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_on"]) -> MetaOapg.properties.created_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_on"]) -> MetaOapg.properties.modified_on: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_by"]) -> MetaOapg.properties.created_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified_by"]) -> MetaOapg.properties.modified_by: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "token_id", "name", "parent_id", "properties", "attributes", "description", "status", "price", "supply", "minted_amount", "asset_type", "asset_url", "medias", "main_media", "account_id", "project_id", "collection_id", "created_on", "modified_on", "created_by", "modified_by", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        modified_on: typing.Union[MetaOapg.properties.modified_on, str, datetime, ],
        minted_amount: typing.Union[MetaOapg.properties.minted_amount, decimal.Decimal, int, float, ],
        description: typing.Union[MetaOapg.properties.description, str, ],
        asset_url: typing.Union[MetaOapg.properties.asset_url, str, ],
        created_by: typing.Union[MetaOapg.properties.created_by, decimal.Decimal, int, float, ],
        supply: typing.Union[MetaOapg.properties.supply, decimal.Decimal, int, float, ],
        collection_id: typing.Union[MetaOapg.properties.collection_id, str, ],
        medias: typing.Union[MetaOapg.properties.medias, list, tuple, ],
        account_id: typing.Union[MetaOapg.properties.account_id, decimal.Decimal, int, float, ],
        token_id: typing.Union[MetaOapg.properties.token_id, decimal.Decimal, int, float, ],
        created_on: typing.Union[MetaOapg.properties.created_on, str, datetime, ],
        project_id: typing.Union[MetaOapg.properties.project_id, str, ],
        parent_id: typing.Union[MetaOapg.properties.parent_id, str, ],
        price: typing.Union[MetaOapg.properties.price, decimal.Decimal, int, float, ],
        asset_type: typing.Union[MetaOapg.properties.asset_type, str, ],
        modified_by: typing.Union[MetaOapg.properties.modified_by, decimal.Decimal, int, float, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        main_media: typing.Union[MetaOapg.properties.main_media, str, ],
        attributes: typing.Union[MetaOapg.properties.attributes, dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, ],
        properties: typing.Union[MetaOapg.properties.properties, dict, frozendict.frozendict, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Asset':
        return super().__new__(
            cls,
            *_args,
            modified_on=modified_on,
            minted_amount=minted_amount,
            description=description,
            asset_url=asset_url,
            created_by=created_by,
            supply=supply,
            collection_id=collection_id,
            medias=medias,
            account_id=account_id,
            token_id=token_id,
            created_on=created_on,
            project_id=project_id,
            parent_id=parent_id,
            price=price,
            asset_type=asset_type,
            modified_by=modified_by,
            name=name,
            main_media=main_media,
            attributes=attributes,
            id=id,
            properties=properties,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )
